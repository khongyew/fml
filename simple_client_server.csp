enum{
	ClientHello,
	ClientKeyShare,
	ServerHello,
	ServerKeyShare,
	ServerEncryptedExtensions,
	ServerCertificateRequest,
	ServerCertificate,
	ServerCertificateSignature,
	ServerDone,
	ClientCertificate,
	ClientCertificateSignature,
	ClientDone
};

// This simple client-server model is based on the diagram found in the PDF

channel network 0;

Client() = 
	network!ClientHello ->
	network!ClientKeyShare ->
	
	network?ServerHello ->
	network?ServerKeyShare ->
	network?ServerEncryptedExtensions ->
	
	ClientReceiveCertRequest() 
	[]
	ClientReceiveServerCert();

ClientReceiveCertRequest() =
	network?ServerCertificateRequest -> 
	network?ServerCertificate ->	
	network?ServerCertificateSignature ->	
	network?ServerDone ->
	network!ClientCertificate ->
	network!ClientCertificateSignature ->
	network!ClientDone ->	
	ClientConnected();

ClientReceiveServerCert() = 
	network?ServerCertificate ->
	network?ServerCertificateSignature ->
	network?ServerDone ->	
	network!ClientDone ->
	ClientConnected();
	


ClientConnected() = done -> ClientConnected();

Server() = 
	network?ClientHello ->
	network?ClientKeyShare ->
	
	network!ServerHello ->
	network!ServerKeyShare ->
	network!ServerEncryptedExtensions ->

	ServerRequestCert() 
	[]
	ServerSendCert();
	
ServerRequestCert() = 
	network!ServerCertificateRequest -> 
	network!ServerCertificate ->	
	network!ServerCertificateSignature ->	
	network!ServerDone ->
	network?ClientCertificate ->
	network?ClientCertificateSignature ->
	network?ClientDone ->	
	ServerConnected();
	
ServerSendCert() = 
	network!ServerCertificate ->
	network!ServerCertificateSignature ->
	network!ServerDone ->	
	network?ClientDone ->
	ServerConnected();
	

ServerConnected() = done -> ServerConnected();

System() = Client() || Server();

#assert System deadlockfree;